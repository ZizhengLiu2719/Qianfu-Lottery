
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  qiancaiDouBalance: 'qiancaiDouBalance',
  firstName: 'firstName',
  lastName: 'lastName',
  avatarUrl: 'avatarUrl',
  avatarData: 'avatarData',
  avatarMimeType: 'avatarMimeType',
  avatarSize: 'avatarSize',
  language: 'language',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QiancaiDouTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  newBalance: 'newBalance',
  reason: 'reason',
  description: 'description',
  refTable: 'refTable',
  refId: 'refId',
  createdAt: 'createdAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  images: 'images',
  priceInQiancaiDou: 'priceInQiancaiDou',
  stock: 'stock',
  category: 'category',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  totalCost: 'totalCost',
  status: 'status',
  shippingAddress: 'shippingAddress',
  note: 'note',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice'
};

exports.Prisma.OfflineCourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  instructor: 'instructor',
  category: 'category',
  duration: 'duration',
  imageUrl: 'imageUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseScheduleScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  startTime: 'startTime',
  endTime: 'endTime',
  location: 'location',
  capacity: 'capacity',
  bookedSlots: 'bookedSlots',
  feeInQiancaiDou: 'feeInQiancaiDou',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.UserAppointmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  scheduleId: 'scheduleId',
  status: 'status',
  note: 'note',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TravelPostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  summary: 'summary',
  category: 'category',
  tags: 'tags',
  imageUrl: 'imageUrl',
  images: 'images',
  author: 'author',
  isPublished: 'isPublished',
  viewCount: 'viewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  QiancaiDouTransaction: 'QiancaiDouTransaction',
  Product: 'Product',
  Order: 'Order',
  OrderItem: 'OrderItem',
  OfflineCourse: 'OfflineCourse',
  CourseSchedule: 'CourseSchedule',
  UserAppointment: 'UserAppointment',
  TravelPost: 'TravelPost'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Administrator\\Documents\\GitHub\\Qianfu-Lottery\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\Administrator\\Documents\\GitHub\\Qianfu-Lottery\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.15.0",
  "engineVersion": "85179d7826409ee107a6ba334b5e305ae3fba9fb",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// 用户模型\nmodel User {\n  id                Int      @id @default(autoincrement())\n  email             String   @unique\n  passwordHash      String\n  qiancaiDouBalance Int      @default(0)\n  firstName         String?\n  lastName          String?\n  avatarUrl         String?\n  avatarData        String? // Base64编码的头像数据\n  avatarMimeType    String? // 头像MIME类型\n  avatarSize        Int? // 头像文件大小（字节）\n  language          String   @default(\"zh\")\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // 关联关系\n  qiancaiDouTransactions QiancaiDouTransaction[]\n  orders                 Order[]\n  appointments           UserAppointment[]\n\n  @@map(\"users\")\n}\n\n// 仟彩豆交易记录\nmodel QiancaiDouTransaction {\n  id          Int      @id @default(autoincrement())\n  userId      Int\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  amount      Int // 正数为增加，负数为减少\n  newBalance  Int // 交易后的余额\n  reason      String // 交易原因: ADMIN_ADJUSTMENT, PRODUCT_REDEMPTION, APPOINTMENT_FEE, TASK_REWARD\n  description String? // 详细描述\n  refTable    String? // 关联表名\n  refId       String? // 关联记录ID\n  createdAt   DateTime @default(now())\n\n  @@map(\"qiancaidou_transactions\")\n}\n\n// 商品模型\nmodel Product {\n  id                Int      @id @default(autoincrement())\n  title             String\n  description       String\n  images            String[] @default([])\n  priceInQiancaiDou Int // 仟彩豆价格\n  stock             Int      @default(0)\n  category          String   @default(\"general\")\n  isActive          Boolean  @default(true)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // 关联关系\n  orderItems OrderItem[]\n\n  @@map(\"products\")\n}\n\n// 订单模型\nmodel Order {\n  id              Int      @id @default(autoincrement())\n  userId          Int\n  user            User     @relation(fields: [userId], references: [id])\n  totalCost       Int // 总仟彩豆消费\n  status          String   @default(\"PENDING\") // PENDING, PROCESSING, SHIPPED, COMPLETED, CANCELLED\n  shippingAddress String?\n  note            String?\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  // 关联关系\n  items OrderItem[]\n\n  @@map(\"orders\")\n}\n\n// 订单项目\nmodel OrderItem {\n  id         Int     @id @default(autoincrement())\n  orderId    Int\n  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  productId  Int\n  product    Product @relation(fields: [productId], references: [id])\n  quantity   Int\n  unitPrice  Int // 单价（仟彩豆）\n  totalPrice Int // 小计（仟彩豆）\n\n  @@map(\"order_items\")\n}\n\n// 线下课程\nmodel OfflineCourse {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String\n  instructor  String?\n  category    String // ENGLISH_ORAL, AI_PROGRAMMING\n  duration    Int? // 课程时长（分钟）\n  imageUrl    String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // 关联关系\n  schedules CourseSchedule[]\n\n  @@map(\"offline_courses\")\n}\n\n// 课程时间安排\nmodel CourseSchedule {\n  id              Int           @id @default(autoincrement())\n  courseId        Int\n  course          OfflineCourse @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  startTime       DateTime\n  endTime         DateTime\n  location        String? // 上课地点\n  capacity        Int           @default(10)\n  bookedSlots     Int           @default(0)\n  feeInQiancaiDou Int           @default(0) // 预约费用\n  isActive        Boolean       @default(true)\n  createdAt       DateTime      @default(now())\n\n  // 关联关系\n  appointments UserAppointment[]\n\n  @@map(\"course_schedules\")\n}\n\n// 用户预约\nmodel UserAppointment {\n  id         Int            @id @default(autoincrement())\n  userId     Int\n  user       User           @relation(fields: [userId], references: [id])\n  scheduleId Int\n  schedule   CourseSchedule @relation(fields: [scheduleId], references: [id])\n  status     String         @default(\"BOOKED\") // BOOKED, CANCELLED, COMPLETED, NO_SHOW\n  note       String? // 用户备注\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n\n  @@unique([userId, scheduleId])\n  @@map(\"user_appointments\")\n}\n\n// 旅游文章\nmodel TravelPost {\n  id          Int      @id @default(autoincrement())\n  title       String\n  content     String\n  summary     String?\n  category    String // DOMESTIC, INTERNATIONAL\n  tags        String[] @default([])\n  imageUrl    String?\n  images      String[] @default([])\n  author      String?\n  isPublished Boolean  @default(false)\n  viewCount   Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"travel_posts\")\n}\n",
  "inlineSchemaHash": "b17855dbe938f6b5f0044f21b61775467a1df771415512075cfdbeb0df744238",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qiancaiDouBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarMimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"qiancaiDouTransactions\",\"kind\":\"object\",\"type\":\"QiancaiDouTransaction\",\"relationName\":\"QiancaiDouTransactionToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"UserAppointment\",\"relationName\":\"UserToUserAppointment\"}],\"dbName\":\"users\"},\"QiancaiDouTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QiancaiDouTransactionToUser\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refTable\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"qiancaidou_transactions\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceInQiancaiDou\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":\"products\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"}],\"dbName\":\"orders\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"order_items\"},\"OfflineCourse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instructor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"CourseSchedule\",\"relationName\":\"CourseScheduleToOfflineCourse\"}],\"dbName\":\"offline_courses\"},\"CourseSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"OfflineCourse\",\"relationName\":\"CourseScheduleToOfflineCourse\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookedSlots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"feeInQiancaiDou\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"UserAppointment\",\"relationName\":\"CourseScheduleToUserAppointment\"}],\"dbName\":\"course_schedules\"},\"UserAppointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAppointment\"},{\"name\":\"scheduleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"schedule\",\"kind\":\"object\",\"type\":\"CourseSchedule\",\"relationName\":\"CourseScheduleToUserAppointment\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_appointments\"},\"TravelPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"travel_posts\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

