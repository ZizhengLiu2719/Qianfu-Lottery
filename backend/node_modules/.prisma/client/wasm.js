
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  qiancaiDouBalance: 'qiancaiDouBalance',
  firstName: 'firstName',
  lastName: 'lastName',
  avatarUrl: 'avatarUrl',
  avatarData: 'avatarData',
  avatarMimeType: 'avatarMimeType',
  avatarSize: 'avatarSize',
  language: 'language',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QiancaiDouTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  newBalance: 'newBalance',
  reason: 'reason',
  description: 'description',
  refTable: 'refTable',
  refId: 'refId',
  createdAt: 'createdAt',
  type: 'type',
  direction: 'direction',
  balanceBefore: 'balanceBefore',
  balanceAfter: 'balanceAfter',
  orderId: 'orderId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  images: 'images',
  priceInQiancaiDou: 'priceInQiancaiDou',
  stock: 'stock',
  category: 'category',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  totalCost: 'totalCost',
  status: 'status',
  payMethod: 'payMethod',
  shippingAddressId: 'shippingAddressId',
  trackingNumber: 'trackingNumber',
  estimatedDelivery: 'estimatedDelivery',
  note: 'note',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paidAt: 'paidAt',
  cancelledAt: 'cancelledAt',
  fulfilledAt: 'fulfilledAt',
  refundedAt: 'refundedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice'
};

exports.Prisma.OfflineCourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  instructor: 'instructor',
  category: 'category',
  duration: 'duration',
  imageUrl: 'imageUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseScheduleScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  startTime: 'startTime',
  endTime: 'endTime',
  location: 'location',
  capacity: 'capacity',
  bookedSlots: 'bookedSlots',
  feeInQiancaiDou: 'feeInQiancaiDou',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.UserAppointmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  scheduleId: 'scheduleId',
  status: 'status',
  note: 'note',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LearningRegistrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  itemId: 'itemId',
  itemType: 'itemType',
  title: 'title',
  subtitle: 'subtitle',
  category: 'category',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TravelPostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  summary: 'summary',
  category: 'category',
  tags: 'tags',
  imageUrl: 'imageUrl',
  images: 'images',
  author: 'author',
  isPublished: 'isPublished',
  viewCount: 'viewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  availableBalance: 'availableBalance',
  lockedBalance: 'lockedBalance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  itemsCount: 'itemsCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity'
};

exports.Prisma.InventoryLockScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity',
  status: 'status',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  receiverName: 'receiverName',
  phone: 'phone',
  province: 'province',
  city: 'city',
  district: 'district',
  detail: 'detail',
  zip: 'zip',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShipmentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  carrier: 'carrier',
  trackingNo: 'trackingNo',
  status: 'status',
  shippedAt: 'shippedAt',
  deliveredAt: 'deliveredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShippingTrackScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  status: 'status',
  description: 'description',
  location: 'location',
  timestamp: 'timestamp'
};

exports.Prisma.AppSettingScalarFieldEnum = {
  key: 'key',
  value: 'value',
  updatedAt: 'updatedAt'
};

exports.Prisma.StudyAbroadServiceScalarFieldEnum = {
  id: 'id',
  serviceName: 'serviceName',
  description: 'description',
  serviceType: 'serviceType',
  durationWeeks: 'durationWeeks',
  priceUsd: 'priceUsd',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.SummerCampScalarFieldEnum = {
  id: 'id',
  name: 'name',
  location: 'location',
  description: 'description',
  imageUrl: 'imageUrl',
  startDate: 'startDate',
  endDate: 'endDate',
  ageRange: 'ageRange',
  priceUsd: 'priceUsd',
  maxParticipants: 'maxParticipants',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.UserStudyAbroadRegistrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  serviceId: 'serviceId',
  registrationStatus: 'registrationStatus',
  registeredAt: 'registeredAt',
  cancelledAt: 'cancelledAt',
  completedAt: 'completedAt'
};

exports.Prisma.UserSummerCampRegistrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  summerCampId: 'summerCampId',
  registrationStatus: 'registrationStatus',
  registeredAt: 'registeredAt',
  cancelledAt: 'cancelledAt',
  completedAt: 'completedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.PayMethod = exports.$Enums.PayMethod = {
  QIANCAIDOU: 'QIANCAIDOU'
};

exports.InventoryLockStatus = exports.$Enums.InventoryLockStatus = {
  LOCKED: 'LOCKED',
  RELEASED: 'RELEASED',
  CONSUMED: 'CONSUMED'
};

exports.ShipmentStatus = exports.$Enums.ShipmentStatus = {
  PENDING: 'PENDING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED'
};

exports.QiancaiDouTransactionType = exports.$Enums.QiancaiDouTransactionType = {
  EARN: 'EARN',
  SPEND: 'SPEND',
  REFUND: 'REFUND',
  LOCK: 'LOCK',
  UNLOCK: 'UNLOCK',
  ADJUST: 'ADJUST'
};

exports.TransactionDirection = exports.$Enums.TransactionDirection = {
  CREDIT: 'CREDIT',
  DEBIT: 'DEBIT'
};

exports.Prisma.ModelName = {
  User: 'User',
  QiancaiDouTransaction: 'QiancaiDouTransaction',
  Product: 'Product',
  Order: 'Order',
  OrderItem: 'OrderItem',
  OfflineCourse: 'OfflineCourse',
  CourseSchedule: 'CourseSchedule',
  UserAppointment: 'UserAppointment',
  LearningRegistration: 'LearningRegistration',
  TravelPost: 'TravelPost',
  Account: 'Account',
  Cart: 'Cart',
  CartItem: 'CartItem',
  InventoryLock: 'InventoryLock',
  Address: 'Address',
  Shipment: 'Shipment',
  ShippingTrack: 'ShippingTrack',
  AppSetting: 'AppSetting',
  StudyAbroadService: 'StudyAbroadService',
  SummerCamp: 'SummerCamp',
  UserStudyAbroadRegistration: 'UserStudyAbroadRegistration',
  UserSummerCampRegistration: 'UserSummerCampRegistration'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Administrator\\Documents\\GitHub\\Qianfu-Lottery\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\Administrator\\Documents\\GitHub\\Qianfu-Lottery\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.15.0",
  "engineVersion": "85179d7826409ee107a6ba334b5e305ae3fba9fb",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// 用户模型\nmodel User {\n  id                Int      @id @default(autoincrement())\n  email             String   @unique\n  passwordHash      String\n  qiancaiDouBalance Int      @default(0)\n  firstName         String?\n  lastName          String?\n  avatarUrl         String?\n  avatarData        String? // Base64编码的头像数据\n  avatarMimeType    String? // 头像MIME类型\n  avatarSize        Int? // 头像文件大小（字节）\n  language          String   @default(\"zh\")\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // 关联关系\n  qiancaiDouTransactions   QiancaiDouTransaction[]\n  orders                   Order[]\n  appointments             UserAppointment[]\n  learningRegistrations    LearningRegistration[]\n  account                  Account?\n  carts                    Cart[]\n  addresses                Address[]\n  studyAbroadRegistrations UserStudyAbroadRegistration[]\n  summerCampRegistrations  UserSummerCampRegistration[]\n\n  @@map(\"users\")\n}\n\n// 仟彩豆交易记录\nmodel QiancaiDouTransaction {\n  id            Int                        @id @default(autoincrement())\n  userId        Int\n  user          User                       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  amount        Int // 正数为增加，负数为减少\n  newBalance    Int // 交易后的余额\n  reason        String // 交易原因: ADMIN_ADJUSTMENT, PRODUCT_REDEMPTION, APPOINTMENT_FEE, TASK_REWARD\n  description   String? // 详细描述\n  refTable      String? // 关联表名\n  refId         String? // 关联记录ID\n  createdAt     DateTime                   @default(now())\n  // 新增字段（向后兼容，可为空）\n  type          QiancaiDouTransactionType?\n  direction     TransactionDirection?\n  balanceBefore Int?\n  balanceAfter  Int?\n  orderId       Int?\n  order         Order?                     @relation(fields: [orderId], references: [id])\n\n  @@map(\"qiancaidou_transactions\")\n}\n\n// 商品模型\nmodel Product {\n  id                Int      @id @default(autoincrement())\n  title             String\n  description       String\n  images            String[] @default([])\n  priceInQiancaiDou Int // 仟彩豆价格\n  stock             Int      @default(0)\n  category          String   @default(\"general\")\n  isActive          Boolean  @default(true)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // 关联关系\n  orderItems     OrderItem[]\n  cartItems      CartItem[]\n  inventoryLocks InventoryLock[]\n\n  @@map(\"products\")\n}\n\n// 订单模型\nmodel Order {\n  id                Int         @id @default(autoincrement())\n  userId            Int\n  user              User        @relation(fields: [userId], references: [id])\n  totalCost         Int // 总仟彩豆消费\n  status            OrderStatus @default(PENDING) // PENDING, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELLED, REFUNDED\n  payMethod         PayMethod   @default(QIANCAIDOU)\n  shippingAddressId Int? // 配送地址ID\n  trackingNumber    String? // 物流单号\n  estimatedDelivery DateTime? // 预计送达时间\n  note              String?\n  createdAt         DateTime    @default(now())\n  updatedAt         DateTime    @updatedAt\n  paidAt            DateTime?\n  cancelledAt       DateTime?\n  fulfilledAt       DateTime?\n  refundedAt        DateTime?\n\n  // 关联关系\n  items           OrderItem[]\n  inventoryLocks  InventoryLock[]\n  transactions    QiancaiDouTransaction[]\n  shipment        Shipment?\n  shippingAddress Address?                @relation(\"OrderShippingAddress\", fields: [shippingAddressId], references: [id])\n  shippingTracks  ShippingTrack[]\n\n  @@map(\"orders\")\n}\n\n// 订单项目\nmodel OrderItem {\n  id         Int     @id @default(autoincrement())\n  orderId    Int\n  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  productId  Int\n  product    Product @relation(fields: [productId], references: [id])\n  quantity   Int\n  unitPrice  Int // 单价（仟彩豆）\n  totalPrice Int // 小计（仟彩豆）\n\n  @@map(\"order_items\")\n}\n\n// 线下课程\nmodel OfflineCourse {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String\n  instructor  String?\n  category    String // AI编程学习, 英语学习, 留学咨询, 夏令营\n  duration    Int? // 课程时长（分钟）\n  imageUrl    String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // 关联关系\n  schedules CourseSchedule[]\n\n  @@map(\"offline_courses\")\n}\n\n// 课程时间安排\nmodel CourseSchedule {\n  id              Int           @id @default(autoincrement())\n  courseId        Int\n  course          OfflineCourse @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  startTime       DateTime\n  endTime         DateTime\n  location        String? // 上课地点\n  capacity        Int           @default(10)\n  bookedSlots     Int           @default(0)\n  feeInQiancaiDou Int           @default(0) // 预约费用（保留但不再使用）\n  isActive        Boolean       @default(true)\n  createdAt       DateTime      @default(now())\n\n  // 关联关系\n  appointments UserAppointment[]\n\n  @@map(\"course_schedules\")\n}\n\n// 用户预约/注册\nmodel UserAppointment {\n  id         Int            @id @default(autoincrement())\n  userId     Int\n  user       User           @relation(fields: [userId], references: [id])\n  scheduleId Int\n  schedule   CourseSchedule @relation(fields: [scheduleId], references: [id])\n  status     String         @default(\"REGISTERED\") // REGISTERED, CANCELLED, COMPLETED, NO_SHOW\n  note       String? // 用户备注\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n\n  @@unique([userId, scheduleId])\n  @@map(\"user_appointments\")\n}\n\n// 学习彩注册\nmodel LearningRegistration {\n  id        Int      @id @default(autoincrement())\n  userId    Int      @map(\"user_id\")\n  user      User     @relation(fields: [userId], references: [id])\n  itemId    String   @map(\"item_id\") // 课程/服务/夏令营的ID\n  itemType  String   @map(\"item_type\") // course, service, camp\n  title     String\n  subtitle  String\n  category  String\n  status    String   @default(\"REGISTERED\") // REGISTERED, CANCELLED, COMPLETED\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@unique([userId, itemId, itemType])\n  @@map(\"learning_registrations\")\n}\n\n// 旅游文章\nmodel TravelPost {\n  id          Int      @id @default(autoincrement())\n  title       String\n  content     String\n  summary     String?\n  category    String // DOMESTIC, INTERNATIONAL\n  tags        String[] @default([])\n  imageUrl    String?\n  images      String[] @default([])\n  author      String?\n  isPublished Boolean  @default(false)\n  viewCount   Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"travel_posts\")\n}\n\n// 账户：仟彩豆可用/锁定余额\nmodel Account {\n  id               Int      @id @default(autoincrement())\n  userId           Int      @unique\n  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  availableBalance Int      @default(0)\n  lockedBalance    Int      @default(0)\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  @@map(\"accounts\")\n}\n\n// 服务器购物车\nmodel Cart {\n  id         Int        @id @default(autoincrement())\n  userId     Int        @unique\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  items      CartItem[]\n  itemsCount Int        @default(0)\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime   @updatedAt\n\n  @@map(\"carts\")\n}\n\nmodel CartItem {\n  id        Int     @id @default(autoincrement())\n  cartId    Int\n  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)\n  productId Int\n  product   Product @relation(fields: [productId], references: [id])\n  quantity  Int\n\n  @@unique([cartId, productId])\n  @@map(\"cart_items\")\n}\n\n// 库存锁\nmodel InventoryLock {\n  id        Int                 @id @default(autoincrement())\n  orderId   Int\n  order     Order               @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  productId Int\n  product   Product             @relation(fields: [productId], references: [id])\n  quantity  Int\n  status    InventoryLockStatus @default(LOCKED)\n  expiresAt DateTime? // 锁定过期时间\n  createdAt DateTime            @default(now())\n  updatedAt DateTime            @updatedAt\n\n  @@map(\"inventory_locks\")\n}\n\n// 地址簿\nmodel Address {\n  id           Int      @id @default(autoincrement())\n  userId       Int\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  receiverName String\n  phone        String\n  province     String\n  city         String\n  district     String?\n  detail       String\n  zip          String?\n  isDefault    Boolean  @default(false)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // 关联关系\n  orders Order[] @relation(\"OrderShippingAddress\")\n\n  @@map(\"addresses\")\n}\n\n// 发货信息\nmodel Shipment {\n  id          Int            @id @default(autoincrement())\n  orderId     Int            @unique\n  order       Order          @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  carrier     String?\n  trackingNo  String?\n  status      ShipmentStatus @default(PENDING)\n  shippedAt   DateTime?\n  deliveredAt DateTime?\n  createdAt   DateTime       @default(now())\n  updatedAt   DateTime       @updatedAt\n\n  @@map(\"shipments\")\n}\n\n// 物流跟踪\nmodel ShippingTrack {\n  id          Int      @id @default(autoincrement())\n  orderId     Int\n  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  status      String // 物流状态\n  description String? // 状态描述\n  location    String? // 当前位置\n  timestamp   DateTime @default(now())\n\n  @@map(\"shipping_tracks\")\n}\n\n// ===== Enums =====\nenum PayMethod {\n  QIANCAIDOU\n}\n\nenum InventoryLockStatus {\n  LOCKED\n  RELEASED\n  CONSUMED\n}\n\nenum ShipmentStatus {\n  PENDING\n  SHIPPED\n  DELIVERED\n}\n\nenum OrderStatus {\n  PENDING // 待支付\n  PAID // 已支付\n  PROCESSING // 处理中\n  SHIPPED // 已发货\n  DELIVERED // 已送达\n  CANCELLED // 已取消\n  REFUNDED // 已退款\n}\n\nenum QiancaiDouTransactionType {\n  EARN\n  SPEND\n  REFUND\n  LOCK\n  UNLOCK\n  ADJUST\n}\n\nenum TransactionDirection {\n  CREDIT\n  DEBIT\n}\n\n// 应用设置（键值对存储），用于放置 SEED_TOKEN 等\nmodel AppSetting {\n  key       String   @id\n  value     String\n  updatedAt DateTime @default(now())\n\n  @@map(\"app_settings\")\n}\n\n// 留学咨询服务\nmodel StudyAbroadService {\n  id            Int      @id @default(autoincrement())\n  serviceName   String\n  description   String?\n  serviceType   String // PLANNING, APPLICATION, VISA, PREPARATION, SUPPORT\n  durationWeeks Int?\n  priceUsd      Decimal?\n  isActive      Boolean  @default(true)\n  createdAt     DateTime @default(now())\n\n  // 关联关系\n  registrations UserStudyAbroadRegistration[]\n\n  @@map(\"study_abroad_services\")\n}\n\n// 夏令营\nmodel SummerCamp {\n  id              Int       @id @default(autoincrement())\n  name            String\n  location        String?\n  description     String?\n  imageUrl        String?\n  startDate       DateTime?\n  endDate         DateTime?\n  ageRange        String?\n  priceUsd        Decimal?\n  maxParticipants Int       @default(30)\n  isActive        Boolean   @default(true)\n  createdAt       DateTime  @default(now())\n\n  // 关联关系\n  registrations UserSummerCampRegistration[]\n\n  @@map(\"summer_camps\")\n}\n\n// 用户留学咨询注册\nmodel UserStudyAbroadRegistration {\n  id                 Int                @id @default(autoincrement())\n  userId             Int\n  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n  serviceId          Int\n  service            StudyAbroadService @relation(fields: [serviceId], references: [id], onDelete: Cascade)\n  registrationStatus String             @default(\"REGISTERED\") // REGISTERED, CANCELLED, COMPLETED\n  registeredAt       DateTime           @default(now())\n  cancelledAt        DateTime?\n  completedAt        DateTime?\n\n  @@unique([userId, serviceId])\n  @@map(\"user_study_abroad_registrations\")\n}\n\n// 用户夏令营注册\nmodel UserSummerCampRegistration {\n  id                 Int        @id @default(autoincrement())\n  userId             Int\n  user               User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  summerCampId       Int\n  summerCamp         SummerCamp @relation(fields: [summerCampId], references: [id], onDelete: Cascade)\n  registrationStatus String     @default(\"REGISTERED\") // REGISTERED, CANCELLED, COMPLETED\n  registeredAt       DateTime   @default(now())\n  cancelledAt        DateTime?\n  completedAt        DateTime?\n\n  @@unique([userId, summerCampId])\n  @@map(\"user_summer_camp_registrations\")\n}\n",
  "inlineSchemaHash": "704e3067033fe6a0ddffb94e9913a6017263223215f20e844a0ca2fe69041dcb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qiancaiDouBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarMimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"qiancaiDouTransactions\",\"kind\":\"object\",\"type\":\"QiancaiDouTransaction\",\"relationName\":\"QiancaiDouTransactionToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"UserAppointment\",\"relationName\":\"UserToUserAppointment\"},{\"name\":\"learningRegistrations\",\"kind\":\"object\",\"type\":\"LearningRegistration\",\"relationName\":\"LearningRegistrationToUser\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUser\"},{\"name\":\"studyAbroadRegistrations\",\"kind\":\"object\",\"type\":\"UserStudyAbroadRegistration\",\"relationName\":\"UserToUserStudyAbroadRegistration\"},{\"name\":\"summerCampRegistrations\",\"kind\":\"object\",\"type\":\"UserSummerCampRegistration\",\"relationName\":\"UserToUserSummerCampRegistration\"}],\"dbName\":\"users\"},\"QiancaiDouTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QiancaiDouTransactionToUser\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refTable\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"QiancaiDouTransactionType\"},{\"name\":\"direction\",\"kind\":\"enum\",\"type\":\"TransactionDirection\"},{\"name\":\"balanceBefore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"balanceAfter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToQiancaiDouTransaction\"}],\"dbName\":\"qiancaidou_transactions\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceInQiancaiDou\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"inventoryLocks\",\"kind\":\"object\",\"type\":\"InventoryLock\",\"relationName\":\"InventoryLockToProduct\"}],\"dbName\":\"products\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"payMethod\",\"kind\":\"enum\",\"type\":\"PayMethod\"},{\"name\":\"shippingAddressId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedDelivery\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fulfilledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refundedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"inventoryLocks\",\"kind\":\"object\",\"type\":\"InventoryLock\",\"relationName\":\"InventoryLockToOrder\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"QiancaiDouTransaction\",\"relationName\":\"OrderToQiancaiDouTransaction\"},{\"name\":\"shipment\",\"kind\":\"object\",\"type\":\"Shipment\",\"relationName\":\"OrderToShipment\"},{\"name\":\"shippingAddress\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"OrderShippingAddress\"},{\"name\":\"shippingTracks\",\"kind\":\"object\",\"type\":\"ShippingTrack\",\"relationName\":\"OrderToShippingTrack\"}],\"dbName\":\"orders\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"order_items\"},\"OfflineCourse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instructor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"CourseSchedule\",\"relationName\":\"CourseScheduleToOfflineCourse\"}],\"dbName\":\"offline_courses\"},\"CourseSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"OfflineCourse\",\"relationName\":\"CourseScheduleToOfflineCourse\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookedSlots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"feeInQiancaiDou\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"UserAppointment\",\"relationName\":\"CourseScheduleToUserAppointment\"}],\"dbName\":\"course_schedules\"},\"UserAppointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAppointment\"},{\"name\":\"scheduleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"schedule\",\"kind\":\"object\",\"type\":\"CourseSchedule\",\"relationName\":\"CourseScheduleToUserAppointment\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_appointments\"},\"LearningRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LearningRegistrationToUser\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"item_id\"},{\"name\":\"itemType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"item_type\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"learning_registrations\"},\"TravelPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"travel_posts\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"availableBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lockedBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"accounts\"},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"},{\"name\":\"itemsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"carts\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"cart_items\"},\"InventoryLock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"InventoryLockToOrder\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"InventoryLockToProduct\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InventoryLockStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"inventory_locks\"},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AddressToUser\"},{\"name\":\"receiverName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderShippingAddress\"}],\"dbName\":\"addresses\"},\"Shipment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToShipment\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ShipmentStatus\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"shipments\"},\"ShippingTrack\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToShippingTrack\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"shipping_tracks\"},\"AppSetting\":{\"fields\":[{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"app_settings\"},\"StudyAbroadService\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationWeeks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registrations\",\"kind\":\"object\",\"type\":\"UserStudyAbroadRegistration\",\"relationName\":\"StudyAbroadServiceToUserStudyAbroadRegistration\"}],\"dbName\":\"study_abroad_services\"},\"SummerCamp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ageRange\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxParticipants\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registrations\",\"kind\":\"object\",\"type\":\"UserSummerCampRegistration\",\"relationName\":\"SummerCampToUserSummerCampRegistration\"}],\"dbName\":\"summer_camps\"},\"UserStudyAbroadRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserStudyAbroadRegistration\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"StudyAbroadService\",\"relationName\":\"StudyAbroadServiceToUserStudyAbroadRegistration\"},{\"name\":\"registrationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_study_abroad_registrations\"},\"UserSummerCampRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSummerCampRegistration\"},{\"name\":\"summerCampId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"summerCamp\",\"kind\":\"object\",\"type\":\"SummerCamp\",\"relationName\":\"SummerCampToUserSummerCampRegistration\"},{\"name\":\"registrationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_summer_camp_registrations\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

